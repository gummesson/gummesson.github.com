<?xml version="1.0" encoding="UTF-8"?>
  <rss version="2.0">
    <channel>
      <title>Ellen Gummesson</title>
        <description>Random ramblings, musings and geekiness</description>
          <link>http://ellengummesson.com/</link>
            
              <item>
                <title>Scriptlr.js</title>
                <description>&lt;p&gt;I was getting sick of adding &lt;code&gt;script&lt;/code&gt; tags in my markup so I wrote a little script that could make it a bit more bearable. What it does is basically looping through an array of files, creating a new tag for each and every script and appends it to the body of the document. It’s obviously not meant to be used in production, but It’s quite handy when you want to play around.&lt;/p&gt;
</description>
                <published>April 22, 2013</published>
                <link>http://ellengummesson.com/blog/2013/04/22/scriptlr-js</link>
              </item>
            
              <item>
                <title>Weaning yourself of jQuery</title>
                <description>&lt;p&gt;A great post on how to do basic DOM manipulation with plain Javascript instead of using &lt;a href=&quot;http://jquery.com/&quot; title=&quot;jQuery&quot;&gt;jQuery&lt;/a&gt;. jQuery is awesome, but maybe it’s not necessary to use it if you’re only doing super simple stuff.&lt;/p&gt;
</description>
                <published>April 19, 2013</published>
                <link>http://ellengummesson.com/blog/2013/04/19/weaning-yourself-off-jquery</link>
              </item>
            
              <item>
                <title>It's the little things</title>
                <description>&lt;p&gt;A couple of days ago Chris Coyier &lt;a href=&quot;http://css-tricks.com/can-you-over-organize-javascript/&quot; title=&quot;Can You “Over Organize” JavaScript?&quot;&gt;wrote an interesting post&lt;/a&gt; asking if you can over organize your Javascript. Since I just started to learn it “properly” I decided to challenge myself by &lt;a href=&quot;http://snippi.com/s/r5kl9vo&quot; title=&quot;css-tricks.js&quot;&gt;re-writing the code&lt;/a&gt; he had posted. He responded with &lt;a href=&quot;http://css-tricks.com/can-you-over-organize-javascript/#comment-366077&quot; title=&quot;&amp;quot;Very nice!&amp;quot;&quot;&gt;this comment&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/blog/2013-04-12-css-tricks.png&quot; alt=&quot;A very nice comment&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I’m not going to lie, that made me smile&lt;sup id=&quot;fnref:20130412-1&quot;&gt;&lt;a href=&quot;#fn:20130412-1&quot; rel=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;

&lt;hr /&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:20130412-1&quot;&gt;
      &lt;p&gt;And you can officially file this post under “humble brag”.&lt;a href=&quot;#fnref:20130412-1&quot; rel=&quot;reference&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</description>
                <published>April 12, 2013</published>
                <link>http://ellengummesson.com/blog/2013/04/12/its-the-little-things</link>
              </item>
            
              <item>
                <title>My first ever pull request was a success</title>
                <description>&lt;p&gt;So yesterday I sent my first pull request ever and it actually got merged. My addition was adding a link to Airbnb’s &lt;a href=&quot;https://github.com/airbnb/javascript&quot; title=&quot;Airbnb JavaScript Style Guide&quot;&gt;JavaScript Style Guide&lt;/a&gt; in a &lt;a href=&quot;https://github.com/gregstallings/styleguides&quot; title=&quot;A handy collection of style guides&quot;&gt;repository that collects a bunch of styleguides&lt;/a&gt;. It may not be the most exciting thing ever but I guess that I can now officially call myself an open source contributor, right?&lt;/p&gt;
</description>
                <published>April  8, 2013</published>
                <link>http://ellengummesson.com/blog/2013/04/08/my-first-ever-pull-request-was-a-success</link>
              </item>
            
              <item>
                <title>Display your Github repos with jQuery and Mustache.js</title>
                <description>&lt;p&gt;After failing to keep a simple Markdown document with up-to-date information of all my Github repositories I decided to skip using that method in favor of something more efficient. I didn’t have to look any further than using &lt;a href=&quot;http://jquery.com/&quot; title=&quot;jQuery&quot;&gt;jQuery&lt;/a&gt;’s &lt;code&gt;getJSON&lt;/code&gt; function and the Javascript implementation of the &lt;a href=&quot;http://mustache.github.com/&quot; title=&quot;Mustache&quot;&gt;Mustache templating engine&lt;/a&gt;. The end result &lt;a href=&quot;/experiments/repos&quot; title=&quot;My Github repositories&quot;&gt;looks pretty neat&lt;/a&gt;, although I think I’m going to tweak the UI a bit. I also created a repository for it &lt;a href=&quot;https://github.com/gummesson/repos.js&quot; title=&quot;repos.js on Github&quot;&gt;on Github&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;the-javascript&quot;&gt;The Javascript&lt;/h2&gt;

&lt;p&gt;This is the function itself: &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;function getGithubRepositories(username) {

  &quot;use strict&quot;;

  var repoList = $(&quot;#repo-list&quot;);
  repoList.append(&quot;&amp;lt;li&amp;gt;Loading...&amp;lt;/li&amp;gt;&quot;);

  var githubUsername = function(username, callback) {
    $.getJSON(&quot;https://api.github.com/users/&quot; + username + &quot;/repos?callback=?&quot;, callback);
  };

  githubUsername(username, function(data) {

    var template    = $(&quot;#github-repos&quot;).html(),
        information = Mustache.render(template, data);

    repoList.html(information);

  });

}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And you simply use it like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$(document).ready(function() {

  &quot;use strict&quot;;
  getGithubRepositories(&quot;gummesson&quot;);

});
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Just replace &lt;code&gt;gummesson&lt;/code&gt; with your own username and you’re good to go!&lt;/p&gt;

&lt;h2 id=&quot;the-template&quot;&gt;The template&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Pro-tip:&lt;/strong&gt; If you’re planning to use &lt;a href=&quot;https://github.com/janl/mustache.js&quot; title=&quot;Mustache.js&quot;&gt;Mustache.js&lt;/a&gt; on a &lt;a href=&quot;http://jekyllrb.com/&quot; title=&quot;Jekyll&quot;&gt;Jekyll&lt;/a&gt; site like I do, don’t forget to wrap the &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; template in a &lt;code&gt;raw&lt;/code&gt; block.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;ul id=&quot;repo-list&quot;&amp;gt;
  &amp;lt;script id=&quot;github-repos&quot; type=&quot;text/template&quot;&amp;gt;
    {{#data}}
      &amp;lt;li&amp;gt;
        &amp;lt;a href=&quot;{{html_url}}&quot; title=&quot;{{name}}&quot; alt=&quot;{{name}}&quot;&amp;gt;
          {{name}}
        &amp;lt;/a&amp;gt;
        {{#language}}
          &amp;lt;em&amp;gt;({{language}})&amp;lt;/em&amp;gt;
        {{/language}}
      &amp;lt;/li&amp;gt;
    {{/data}}
  &amp;lt;/script&amp;gt;
&amp;lt;/ul&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I essentially only wanted to display the name, the URL and the language but you can of course add about a million other things like the description, how many forks the repo has and so forth.&lt;/p&gt;
</description>
                <published>April  4, 2013</published>
                <link>http://ellengummesson.com/blog/2013/04/04/display-your-github-repos-with-jquery-and-mustache-js</link>
              </item>
            
    </channel>
  </rss>
