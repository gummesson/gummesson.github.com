<?xml version="1.0" encoding="UTF-8"?>
  <rss version="2.0">
    <channel>
      <title>Ellen Gummesson</title>
        <description>Random ramblings, musings and geekiness</description>
          <link>http://ellengummesson.com/</link>
            
              <item>
                <title>A handy function for going to the root directory of a project in Vim</title>
                <description>&lt;p&gt;Here’s a handy function I came up with after being tired of using &lt;code&gt;:cd ../&lt;/code&gt; like a madman when I was deep down at the bottom of a project’s folder structure:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;function! GoToRootDir()
  if isdirectory(&quot;.git&quot;)|| filereadable(&quot;Rakefile&quot;) || filereadable(&quot;Gruntfile.js&quot;)
    pwd
  else
    silent! exec 'cd ../'
    call GoToRootDir()
  endif
endfunction
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It’s a not-so-fancy way of basically telling Vim to keep going up in the directory structure until it finds either a &lt;code&gt;.git&lt;/code&gt; folder or a specific file. When it finds the root it’ll also print out the path, which I added so that you can actually see that you’re in the root of the project. You can of course change &lt;code&gt;.git&lt;/code&gt;, &lt;code&gt;Rakefile&lt;/code&gt; and &lt;code&gt;Gruntfile.js&lt;/code&gt; to something completely different, as long as it’s a file that you commonly have in your projects. I also added a more convenient mapping for it in my &lt;code&gt;.vimrc&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;command! -nargs=0 Root call GoToRootDir()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This step may not be necessary, but by mapping something like &lt;code&gt;:call GoToRootDir&lt;/code&gt; to just &lt;code&gt;:Root&lt;/code&gt; means that you have to type fewer keystrokes.&lt;/p&gt;
</description>
                <published>May 20, 2013</published>
                <link>http://ellengummesson.com/blog/2013/05/20/a-handy-function-for-going-to-the-root-directory-of-a-project-in-vim</link>
              </item>
            
              <item>
                <title>CSS Architecture</title>
                <description>&lt;p&gt;A nice and lengthy article about how to write modular and maintainable CSS. I especially like the naming conventions, mostly because they’re similar to my own. I’m vain like that.&lt;/p&gt;
</description>
                <published>May 14, 2013</published>
                <link>http://ellengummesson.com/blog/2013/05/14/css-architecture</link>
              </item>
            
              <item>
                <title>stereokai.vim</title>
                <description>&lt;p&gt;Lately I’ve really started to enjoy &lt;a href=&quot;http://www.monokai.nl/blog/2006/07/15/textmate-color-theme/&quot;&gt;the Monokai theme&lt;/a&gt;. There’s a couple of different versions out there for &lt;a href=&quot;http://www.vim.org&quot;&gt;Vim&lt;/a&gt; and my favorite is &lt;a href=&quot;https://github.com/jaromero/vim-monokai-refined&quot;&gt;Monokai-Refined&lt;/a&gt;. However, Vim’s way of handling highlighting can sometimes be quite weird so I decided to add some minor tweaks so that it looks especially good when your writing HTML, CSS and JavaScript and make it available in a repository. I don’t know if it’ll replace my beloved &lt;a href=&quot;https://github.com/chriskempson/tomorrow-theme&quot;&gt;Tomorrow Theme&lt;/a&gt; or &lt;a href=&quot;http://ethanschoonover.com/solarized&quot;&gt;Solarized&lt;/a&gt;, but it’s definitively a close third atleast.&lt;/p&gt;
</description>
                <published>May  9, 2013</published>
                <link>http://ellengummesson.com/blog/2013/05/09/stereokai-vim</link>
              </item>
            
              <item>
                <title>Responsive Inspector</title>
                <description>&lt;p&gt;A pretty nice &lt;a href=&quot;https://chrome.google.com/webstore/detail/responsive-inspector-beta/memcdolmmnmnleeiodllgpibdjlkbpim&quot;&gt;Chrome extension&lt;/a&gt; for viewing the different defined media queries of a website. I sort of feel like a really nerd when I use it but the curiosity takes the best of me.&lt;/p&gt;
</description>
                <published>May  6, 2013</published>
                <link>http://ellengummesson.com/blog/2013/05/06/responsive-inspector</link>
              </item>
            
              <item>
                <title>A brand new blog (again)</title>
                <description>&lt;p&gt;I decided yet again to throw together a new design for this site. At this point it feels like it’s almost getting a monthly thing, but hopefully I’ll stick with this one for a bit longer. I do really feel that I’m getting a bit better every time I do it though, which is something. This time around I took a much more &lt;a href=&quot;http://oocss.org/&quot;&gt;OOCSS&lt;/a&gt; approach to the writing of the CSS and I mainly used the &lt;a href=&quot;http://csswizardry.com/2013/01/mindbemding-getting-your-head-round-bem-syntax/&quot;&gt;BEM&lt;/a&gt; syntax. I don’t find it particularly pretty but it’s quite logical. &lt;/p&gt;

&lt;p&gt;Another thing I did was that instead of prefixing the classes of every major part of the site with &lt;code&gt;site-&lt;/code&gt; I went for a much simpler &lt;code&gt;l-&lt;/code&gt;, which stands for “layout”. I also used &lt;code&gt;br-&lt;/code&gt;, “breakpoint”, for the buttons in the main navigation. They get much wider when the site’s viewed on a small screen and instead of having to write a lot of code I simply added a class to them. Very convenient! If I had more “media query”-based classes I probably would’ve used other names for them, but as of right now it works well I think.&lt;/p&gt;

&lt;p&gt;I once again used &lt;a href=&quot;http://www.sass-lang.com/&quot;&gt;Sass&lt;/a&gt;’ excellent &lt;code&gt;darken&lt;/code&gt; and &lt;code&gt;lighten&lt;/code&gt; functions to generate the color palette. I can’t imagine how I’d do without them, to be honest. Like I mentioned earlier I feel that I’m getting better at designing in general but I’m not designer by far.&lt;/p&gt;

&lt;p&gt;I finally added syntax highlighting too. For some reason I completely missed that &lt;a href=&quot;http://softwaremaniacs.org/soft/highlight/en/&quot;&gt;Highlight.js&lt;/a&gt;, the engine that I now use, actually detects the language automatically without me having to add classes and span tags by hand. All the code is suddenly much more readable! I removed the &lt;a href=&quot;http://www.vim.org/&quot;&gt;Vim&lt;/a&gt; keybindings script for the site. It was getting on my nerves and the code looked truly awful.&lt;/p&gt;

&lt;p&gt;And that’s a wrap!&lt;/p&gt;
</description>
                <published>May  2, 2013</published>
                <link>http://ellengummesson.com/blog/2013/05/02/a-brand-new-blog-again</link>
              </item>
            
    </channel>
  </rss>
