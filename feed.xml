<?xml version="1.0" encoding="UTF-8"?>
  <rss version="2.0">
    <channel>
      <title>Ellen Gummesson</title>
        <description>Random ramblings, musings and geekiness</description>
          <link>http://ellengummesson.com</link>
            
              <item>
                <title>Servera</title>
                <description>&lt;p&gt;After a few hours of hacking spreading out during these last couple of days I’m releasing yet another &lt;a href=&quot;http://nodejs.org/&quot;&gt;Node.js&lt;/a&gt; thing called &lt;a href=&quot;https://npmjs.org/package/servera&quot;&gt;Servera&lt;/a&gt;&lt;sup id=&quot;fnref:20130920-1&quot;&gt;&lt;a href=&quot;#fn:20130920-1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;. It’s a small app for managing and serving all your local static sites by configuring all your projects in a single &lt;code&gt;json&lt;/code&gt; file. The idea is to map them by using this convention:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{
  &quot;myproject&quot;: {
    &quot;dir&quot;: &quot;/home/USERNAME/Dev/myproject&quot;,
    &quot;port&quot;: 3000
  },
  &quot;anotherproject&quot;: {
    &quot;dir&quot;: &quot;C:/Users/USERNAME/Dev/anotherproject&quot;,
    &quot;port&quot;: 6000
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The only thing you need to do to launch the server is to run &lt;code&gt;servera myproject&lt;/code&gt; and then go to &lt;code&gt;localhost:3000&lt;/code&gt; (or whatever port you’ve specified) in your browser. You can also serve the current working directory by running &lt;code&gt;servera .&lt;/code&gt; and you can list all your projects with &lt;code&gt;servera list&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;It’s heavily inspired by &lt;a href=&quot;https://npmjs.org/package/distra&quot;&gt;distra&lt;/a&gt;, although it’s a dumbed down version without the whole &lt;code&gt;/etc/hosts&lt;/code&gt; configuration part&lt;sup id=&quot;fnref:20130920-2&quot;&gt;&lt;a href=&quot;#fn:20130920-2&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;. I’ve tested it on both Windows and Linux, and it should hopefully work on OS X too. &lt;/p&gt;

&lt;p&gt;It’s a pretty simple thing, but I feel that it could actually be useful.&lt;/p&gt;

&lt;h2 id=&quot;under-the-hood&quot;&gt;Under the hood&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;Servera&lt;/code&gt; uses four additional modules: &lt;a href=&quot;https://npmjs.org/package/fs-extra&quot;&gt;fs-extra&lt;/a&gt;, &lt;a href=&quot;https://npmjs.org/package/connect&quot;&gt;connect&lt;/a&gt;, &lt;a href=&quot;https://npmjs.org/package/colors&quot;&gt;colors&lt;/a&gt; and &lt;a href=&quot;https://npmjs.org/package/commander&quot;&gt;commander&lt;/a&gt;. &lt;code&gt;fs-extra&lt;/code&gt; is used for copying the sample configuration file to your home directory while &lt;code&gt;connect&lt;/code&gt; is the main server. &lt;code&gt;colors&lt;/code&gt; is used to colorize the output in the terminal and &lt;code&gt;commander&lt;/code&gt; handles the argument parsing.&lt;/p&gt;

&lt;p&gt;It’s all pretty basic stuff, but together they work really well.&lt;/p&gt;

&lt;hr /&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:20130920-1&quot;&gt;
      &lt;p&gt;Which is the swedish word for “serve”. I’m original like that.&lt;a href=&quot;#fnref:20130920-1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:20130920-2&quot;&gt;
      &lt;p&gt;I’m pretty sure that there’s no easy way of doing that on Windows without using brute force or some other vodoo.&lt;a href=&quot;#fnref:20130920-2&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</description>
                <published>September 20, 2013</published>
                <link>http://ellengummesson.com/blog/2013/09/20/servera</link>
              </item>
            
              <item>
                <title>plit: my first Node.js app</title>
                <description>&lt;p&gt;I’ve been thinking about really learning &lt;a href=&quot;http://nodejs.org/&quot;&gt;Node.js&lt;/a&gt; lately. JavaScript have quickly evolved to become possibly my favorite language, although &lt;a href=&quot;http://www.ruby-lang.org/&quot;&gt;Ruby&lt;/a&gt; will always have a special place in my heart. After a quick Google search and an itch I decided to create something small and mostly useless, as always&lt;sup id=&quot;fnref:20130914-1&quot;&gt;&lt;a href=&quot;#fn:20130914-1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;. Internet, meet &lt;a href=&quot;https://npmjs.org/package/plit&quot;&gt;plit&lt;/a&gt;!&lt;/p&gt;

&lt;h2 id=&quot;plit&quot;&gt;plit&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;plit&lt;/code&gt; is an extremely simple &lt;a href=&quot;http://placehold.it/&quot;&gt;Placehold.it&lt;/a&gt; command line tool. You specify what size you want by running &lt;code&gt;plit 300x200&lt;/code&gt; and it’ll then return the formatted URL, like this: &lt;code&gt;http://placehold.it/300x200&lt;/code&gt;. That’s it. It’s not earth shattering, but it’s something!&lt;/p&gt;

&lt;h2 id=&quot;closing-thoughts&quot;&gt;Closing thoughts&lt;/h2&gt;

&lt;p&gt;It actually felt a bit “weird”, but equally refreshing, to be able to write JavaScript that’s not running in a browser. I’m definitively looking forward to write more applications and the like.&lt;/p&gt;

&lt;p&gt;As a side note I would like to praise Node.js’ and &lt;a href=&quot;https://npmjs.org/&quot;&gt;npm&lt;/a&gt;’s Windows support. Everything works well right out of the box and I didn’t have to configure anything. Now that’s simply amazing!&lt;/p&gt;

&lt;hr /&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:20130914-1&quot;&gt;
      &lt;p&gt;Jack Franklin’s “&lt;a href=&quot;http://javascriptplayground.com/blog/2012/08/writing-a-command-line-node-tool/&quot;&gt;Writing a Command Line Node Tool&lt;/a&gt;” was an immensely good starting point.&lt;a href=&quot;#fnref:20130914-1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</description>
                <published>September 14, 2013</published>
                <link>http://ellengummesson.com/blog/2013/09/14/plit-my-first-node-js-app</link>
              </item>
            
              <item>
                <title>Chocolatey's new Github page</title>
                <description>&lt;p&gt;This is kind of an shameless promotion, but I recently decided to have a go at making a more comprehensive documentation website for &lt;a href=&quot;http://chocolatey.org/&quot;&gt;Chocolatey&lt;/a&gt; and it actually got merged! I’m a nowhere near being a designer but I think that it looks quite nice.&lt;/p&gt;
</description>
                <published>September  9, 2013</published>
                <link>http://ellengummesson.com/blog/2013/09/09/chocolateys-new-github-page</link>
              </item>
            
              <item>
                <title>Find-String</title>
                <description>&lt;p&gt;A cool little &lt;code&gt;ack&lt;/code&gt;-like &lt;a href=&quot;http://technet.microsoft.com/en-us/library/cc731851(v=WS.10).aspx&quot;&gt;PowerShell&lt;/a&gt; module. It works flawlessly!&lt;/p&gt;
</description>
                <published>September  7, 2013</published>
                <link>http://ellengummesson.com/blog/2013/09/07/find-string</link>
              </item>
            
              <item>
                <title>Fixing Jekyll's encoding shenaningans (again)</title>
                <description>&lt;p&gt;After a lot of of hesitation I finally upgraded &lt;a href=&quot;http://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt; to &lt;code&gt;1.1.2&lt;/code&gt; from using the &lt;code&gt;0.12.1&lt;/code&gt; version. Quite a lot has changed and the team is doing a great job with it. However,  my old &lt;a href=&quot;/blog/2013/03/03/fixing-jekylls-encoding-shenanings/&quot;&gt;&lt;code&gt;SET LANG&lt;/code&gt; hack&lt;/a&gt; didn’t work. I tried using &lt;a href=&quot;http://joseoncode.com/2011/11/27/solving-utf-problem-with-jekyll-on-windows/&quot;&gt;another hack&lt;/a&gt; which involves using &lt;code&gt;chcp 65001&lt;/code&gt; instead  but that didn’t quite work either. Whenever I tried to launch the default server &lt;a href=&quot;http://ruby-doc.org/stdlib-1.9.3/libdoc/webrick/rdoc/WEBrick.html&quot;&gt;WEBrick&lt;/a&gt; it blew up. There were errors, errors everywhere. I wasn’t going to give up so I came up with another solution.&lt;/p&gt;

&lt;p&gt;I now use an external server while Jekyll just auto-generates the site. I use a small &lt;a href=&quot;http://nodejs.org/&quot;&gt;Node.js&lt;/a&gt; web server app called &lt;a href=&quot;#&quot;&gt;nws&lt;/a&gt; which I use all the time anyway. I also use &lt;a href=&quot;http://gruntjs.com/&quot;&gt;Grunt&lt;/a&gt; for task automation (&lt;a href=&quot;https://github.com/gummesson/ellengummesson/blob/master/Gruntfile.js&quot;&gt;here’s the source code&lt;/a&gt;). I also have a project called “&lt;a href=&quot;https://github.com/gummesson/teeny-tiny-static-server&quot;&gt;Teeny tiny static server&lt;/a&gt;” which I created some months ago. It uses &lt;a href=&quot;https://github.com/chneukirchen/rack&quot;&gt;Rack&lt;/a&gt;, &lt;a href=&quot;https://github.com/jtrupiano/rack-rewrite&quot;&gt;Rack-Rewrite&lt;/a&gt; and &lt;a href=&quot;https://github.com/macournoyer/thin&quot;&gt;Thin&lt;/a&gt; to create a fast prototype web server, which may be an alternative to using a Node.js based solution. It’s not perfect but it’s better than being stuck on an old version.&lt;/p&gt;
</description>
                <published>September  5, 2013</published>
                <link>http://ellengummesson.com/blog/2013/09/05/fixing-jekylls-encoding-shenaningans-again</link>
              </item>
            
    </channel>
  </rss>
