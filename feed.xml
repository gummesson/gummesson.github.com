<?xml version="1.0" encoding="UTF-8"?>
  <rss version="2.0">
    <channel>
      <title>Ellen Gummesson</title>
        <description>Random ramblings, musings and geekiness</description>
          <link>http://ellengummesson.com</link>
            
              <item>
                <title>file.lua: the experiment continues</title>
                <description>&lt;p&gt;I’m hanging on to my experiment with &lt;a href=&quot;http://www.lua.org/&quot;&gt;Lua&lt;/a&gt; and a few minutes ago I open sourced yet another small library with yet another unimaginative name: &lt;a href=&quot;https://github.com/gummesson/file.lua&quot;&gt;file.lua&lt;/a&gt;. It basically just a few helper functions for dealing with files. I’m still finding it to be a fun language, which feels pretty nice! I’m still on the fence about whether or not I should release my projects on &lt;a href=&quot;http://luarocks.org/&quot;&gt;LuaRocks&lt;/a&gt;, since they feel pretty insignificant compared to some on the projects on there. We’ll see, I guess.&lt;/p&gt;
</description>
                <published>November  6, 2013</published>
                <link>http://ellengummesson.com/blog/2013/11/06/file-lua-the-experiment-continues</link>
              </item>
            
              <item>
                <title>js.lua: a fun little experiment</title>
                <description>&lt;p&gt;I recently had a few hours to kill and I decided to try out a new language, &lt;a href=&quot;http://www.lua.org/&quot;&gt;Lua&lt;/a&gt;. In short, it’s a fun little language&lt;sup id=&quot;fnref:20131104-1&quot;&gt;&lt;a href=&quot;#fn:20131104-1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt; and it’s kind of a cross between JavaScript and Ruby, which I really like. I threw together a little library with JavaScript-like array functions which I named &lt;a href=&quot;https://github.com/gummesson/js.lua&quot;&gt;js.lua&lt;/a&gt;. A really bad name, but I couldn’t really think of anything else.&lt;/p&gt;

&lt;p&gt;Setting everything up was a bit of a pain since I wanted to use &lt;a href=&quot;http://luarocks.org/&quot;&gt;LuaRocks&lt;/a&gt; and the &lt;a href=&quot;http://olivinelabs.com/busted/&quot;&gt;Busted&lt;/a&gt; module for testing. &lt;a href=&quot;http://www.thijsschreijer.nl/blog/?p=772&quot;&gt;This guide&lt;/a&gt; was the &lt;em&gt;only&lt;/em&gt; one I could find and thankfully it worked. Working with JavaScript and &lt;a href=&quot;http://nodejs.org/&quot;&gt;Node.js&lt;/a&gt; has sure made me spoiled since everything’s just a simple Google search away!&lt;/p&gt;

&lt;hr /&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:20131104-1&quot;&gt;
      &lt;p&gt;Literally. The source code’s only around 20 000 lines long. See &lt;a href=&quot;http://www.lua.org/about.html&quot;&gt;“Lua is small”&lt;/a&gt;.&lt;a href=&quot;#fnref:20131104-1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</description>
                <published>November  4, 2013</published>
                <link>http://ellengummesson.com/blog/2013/11/04/js-lua-a-fun-experiment</link>
              </item>
            
              <item>
                <title>Chunks: a super duper, teeny tiny functional library for JavaScript</title>
                <description>&lt;p&gt;Lately I’ve been getting into a more functional approach to programming and I decided to write a simple library for JavaScript, which I named “&lt;a href=&quot;https://github.com/gummesson/chunks&quot;&gt;Chunks&lt;/a&gt;”. I know that there’s a plethora of them available, but it’s always fun to learn by doing. It currently consists of 18 functions that I consider the most commonly used and helpful ones. I might add a couple of more someday but my main goal is to keep it lightweight. As of right now it’s around 2 kb minified and about 0.42 kb minified and gzipped.&lt;/p&gt;

&lt;p&gt;Oh, and here’s a fun aside: the library’s currently 343 lines long (with many comments) while the tests take up a total of 504 lines (with barely any comments).&lt;/p&gt;

&lt;p&gt;Happy (functional) programming!&lt;/p&gt;
</description>
                <published>November  1, 2013</published>
                <link>http://ellengummesson.com/blog/2013/11/01/chunks-a-super-duper-teeny-tiny-functional-library-for-javascript</link>
              </item>
            
              <item>
                <title>Geno: a small and opinionated static site generator</title>
                <description>&lt;p&gt;Another week, another project, and this time it’s yet another static site generator.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/gummesson/geno&quot;&gt;Geno&lt;/a&gt; is a small and opinionated static site generator for easily generating a simple site for your &lt;a href=&quot;https://npmjs.org/&quot;&gt;NPM&lt;/a&gt; projects based on the project’s &lt;code&gt;package.json&lt;/code&gt; file.&lt;/p&gt;

&lt;h2 id=&quot;opinionated&quot;&gt;Opinionated?&lt;/h2&gt;

&lt;p&gt;Well, it is pretty customizable but the defaults are tailored to my needs&lt;sup id=&quot;fnref:20131026-1&quot;&gt;&lt;a href=&quot;#fn:20131026-1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;. Like I stated in the project’s README file, I find that hand crafting a new site for each project can be quite tedious. I’m also not a designer.&lt;/p&gt;

&lt;h2 id=&quot;configuration&quot;&gt;Configuration&lt;/h2&gt;

&lt;p&gt;At the most basic level, Geno needs these fields in the &lt;code&gt;package.json&lt;/code&gt; file:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{
  &quot;name&quot;: &quot;module&quot;,
  &quot;version&quot;: &quot;0.1.0&quot;,
  &quot;description&quot;: &quot;An example module.&quot;,
  &quot;license&quot;: &quot;MIT&quot;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;That’s it! You can also add a &lt;code&gt;geno.json&lt;/code&gt; file at the root of your project to enable some extra features. Check out the &lt;a href=&quot;https://github.com/gummesson/geno&quot;&gt;GitHub repository&lt;/a&gt; for more information.&lt;/p&gt;

&lt;h2 id=&quot;the-anatomy-of-a-nodejs-module&quot;&gt;The anatomy of a Node.js module&lt;/h2&gt;

&lt;p&gt;During the creation of it I decided to document the process behind it, Even though it wasn’t a particular big or compilicated project. I though that it could be interesting or atleast provide some kind of value for someone&lt;sup id=&quot;fnref:20131026-2&quot;&gt;&lt;a href=&quot;#fn:20131026-2&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;

&lt;h3 id=&quot;the-idea&quot;&gt;The idea&lt;/h3&gt;

&lt;p&gt;The initial idea was that I simply wanted to create a project site for &lt;a href=&quot;https://github.com/gummesson/partially&quot;&gt;Partially&lt;/a&gt;. After some tinkering it hit me that it would be pretty cool to use the &lt;code&gt;package.json&lt;/code&gt; file as a base for a website and off I went. In the end it’s a pretty simple idea: read the configuration file(s), add the data to the template and spit out the compiled site.&lt;/p&gt;

&lt;h3 id=&quot;the-build&quot;&gt;The build&lt;/h3&gt;

&lt;p&gt;I actually started with the design first&lt;sup id=&quot;fnref:20131026-3&quot;&gt;&lt;a href=&quot;#fn:20131026-3&quot; class=&quot;footnote&quot;&gt;3&lt;/a&gt;&lt;/sup&gt;, since I’d already begun to work on it. I then went on to pick a templating engine. There’s a plethora of them available and I played around with both &lt;a href=&quot;https://github.com/olado/doT&quot;&gt;doT.js&lt;/a&gt; and &lt;a href=&quot;https://github.com/visionmedia/ejs&quot;&gt;EJS&lt;/a&gt; before I settled on &lt;a href=&quot;https://github.com/jlongster/nunjucks&quot;&gt;Nunjucks&lt;/a&gt;. It’s fairly lightweight, fast and has the perfect logic for making the kind of template that I wanted. I also needed some extra file system functions and &lt;a href=&quot;https://github.com/jprichardson/node-fs-extra&quot;&gt;fs-extra&lt;/a&gt; came to the rescue. It makes copying files and creating folder paths a breeze.&lt;/p&gt;

&lt;h3 id=&quot;the-features&quot;&gt;The features&lt;/h3&gt;

&lt;p&gt;Although I wanted to keep it as simple as possible I realized that it would be nice to have some extra features, so I decided to add the option to use the &lt;code&gt;geno.json&lt;/code&gt; file. This meant that I can add some additional information to a project’s site without too much of a hassle.&lt;/p&gt;

&lt;p&gt;If you want you can take a look at &lt;a href=&quot;http://ellengummesson.com/geno/&quot;&gt;Geno’s own project site&lt;/a&gt; to see how it turned out. All in all I’m pretty happy with it.&lt;/p&gt;

&lt;hr /&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:20131026-1&quot;&gt;
      &lt;p&gt;And my laziness.&lt;a href=&quot;#fnref:20131026-1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:20131026-2&quot;&gt;
      &lt;p&gt;I hope…&lt;a href=&quot;#fnref:20131026-2&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:20131026-3&quot;&gt;
      &lt;p&gt;I call it “Sass-driven development”. I’m not very good at it.&lt;a href=&quot;#fnref:20131026-3&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</description>
                <published>October 26, 2013</published>
                <link>http://ellengummesson.com/blog/2013/10/26/geno-a-small-and-opinionated-static-site-generator</link>
              </item>
            
              <item>
                <title>Partially: use partials in your markup</title>
                <description>&lt;p&gt;I’ve always been jealous of the plethora of build tools available on OS X, in particular &lt;a href=&quot;http://hammerformac.com/&quot;&gt;Hammer for Mac&lt;/a&gt; and it’s excellent &lt;code&gt;@include&lt;/code&gt; feature. Rather than buying a new computer I decided to instead create yet another &lt;a href=&quot;http://nodejs.org/&quot;&gt;Node.js&lt;/a&gt; project and build it myself. I named it &lt;a href=&quot;https://github.com/gummesson/partially&quot;&gt;Partially&lt;/a&gt;&lt;sup id=&quot;fnref:20131019-1&quot;&gt;&lt;a href=&quot;#fn:20131019-1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;. It enables you to do this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;!-- @include partial.ext --&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It’ll then include the partial in question in the file. It should be able to handle any markup language, although I’ve some far only tried HTML, &lt;a href=&quot;http://haml.info/&quot;&gt;Haml&lt;/a&gt;, &lt;a href=&quot;http://jade-lang.com/&quot;&gt;Jade&lt;/a&gt; and &lt;a href=&quot;http://daringfireball.net/projects/markdown/&quot;&gt;Markdown&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This was also the first real project that I decide to go all in on and write actual tests for. It suprised me that once I got into it it was actually quite fun! I have no idea if I did it the “right” way, but I atleast tried to. Pull requests are always welcome. In fact, they’re even encouraged!&lt;/p&gt;

&lt;hr /&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:20131019-1&quot;&gt;
      &lt;p&gt;Of course!&lt;a href=&quot;#fnref:20131019-1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</description>
                <published>October 19, 2013</published>
                <link>http://ellengummesson.com/blog/2013/10/19/partially-use-partials-in-your-markup</link>
              </item>
            
    </channel>
  </rss>
