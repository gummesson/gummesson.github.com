<?xml version="1.0" encoding="UTF-8"?>
  <rss version="2.0">
    <channel>
      <title>Ellen Gummesson</title>
        <description>Random ramblings, overall geekiness and other musings</description>
          <link>http://ellengummesson.com</link>
            
              <item>
                <title>My Jekyll Workflow</title>
                <description>&lt;p&gt;Now that I've had this blog for a while I thought it would be a good idea to write about how my so called workflow looks to wrap this whole Jekyll series up.&lt;/p&gt;

&lt;h2&gt;1. Writing in MarkdownPad&lt;/h2&gt;

&lt;p&gt;I first fire up &lt;a href=&quot;http://www.markdownpad.com/&quot;&gt;MarkdownPad&lt;/a&gt; and start writing a new blog post. It's a really nifty little tool for us Mac-depraved Windows users. I use DejaVu Sans Mono (which is my choice for coding purposes too) as my default font with &lt;code&gt;#FF424242&lt;/code&gt; as the font color and &lt;code&gt;#FFF2F2F2&lt;/code&gt; as the background color.&lt;/p&gt;

&lt;h2&gt;2. Running Jekyll locally&lt;/h2&gt;

&lt;p&gt;After I'm done with my writing, I fire up the command line and run Jekyll to generate my site. I also skim through my blog post to make sure that I haven't accidentally made a typo or something to that effect.&lt;/p&gt;

&lt;h2&gt;3. Pushing to GitHub&lt;/h2&gt;

&lt;p&gt;Last but not least, I open up &lt;a href=&quot;http://windows.github.com/&quot; title=&quot;GitHub for Windows&quot;&gt;GitHub for Windows&lt;/a&gt; and push my site to GitHub. Even though it's not the most convenient thing to do it's still pretty easy and it makes the transfer so much faster with no hassles.&lt;/p&gt;

&lt;h3&gt;Note:&lt;/h3&gt;

&lt;p&gt;GitHub Pages (where I host my site) can actually run Jekyll and generate your site automatically but you can't use your own plugins, so that's why I'm deploying my static pages rather than just the source itself.&lt;/p&gt;

&lt;p&gt;And that's it! You could argue that it sounds a lot like overkill, but it works for me. Sure, I can't upgrade something without sitting infront of my computer, but I know that I'd never update from a phone or email anyways. It really makes me think twice before I publish something too, which I like.&lt;/p&gt;
</description>
                <published>September  2, 2012</published>
                <link>http://ellengummesson.com/blog/2012/09/02/my-jekyll-workflow</link>
              </item>
            
              <item>
                <title>More Additions</title>
                <description>&lt;p&gt;Being bored sometimes has it's own perks. I continued experimenting with the &lt;a href=&quot;/projects/begrider/&quot;&gt;Begider&lt;/a&gt; project and ended up adding a couple of more things to it, mainly a new set of column-like classes called &lt;code&gt;.unit-&lt;/code&gt;. A unit differ itself from a regular column by not having a gutter, and thus having more of a &quot;proportional&quot; percentage width. So, instead of just having these:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;.row .column-twelve {
  width: 99.99%;
  margin-right: 0;
}

.row .column-eleven {
  width: 91.42%;
}

.row .column-ten {
  width: 82.85%;
}

/* Nine columns */
.row .column-nine {
  width: 74.28%;
}

.row .column-eight {
  width: 65.71%;
}

.row .column-seven {
  width: 57.14%;
}

.row .column-six {
  width: 48.57%;
}

.row .column-five {
  width: 40%;
}

.row .column-four {
  width: 31.43%;
}

.row .column-three {
  width: 22.86%;
}

.row .column-two {
  width: 14.29%;
}

.row .column-one {
  width: 5.72%;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can also use these:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;.row .unit-full {
  width: 100%;
}

.row .unit-four-fifths {
  width: 80%;
}

.row .unit-three-quarters {
  width: 75%;
}

.row .unit-two-thirds {
  width: 66.66%;
}

.row .unit-three-fifths {
  width: 60%;
}

.row .unit-half {
  width: 50%;
}

.row .unit-two-fifths {
  width: 40%;
}

.row .unit-one-third {
  width: 33.33%;
}

.row .unit-one-quarter {
  width: 25%;
}

.row .unit-one-fifth {
  width: 20%;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It's useful if you don't want to have any gutters and/or want to use paddings instead instead of margins. I don't know if anyone's ever going to use besides myself, but I quite like to work on it either way. Like I said, it keeps my boredom at bay. I don't really know if it actually needs anything more, but I'll be sure to try stuff out.&lt;/p&gt;
</description>
                <published>August 31, 2012</published>
                <link>http://ellengummesson.com/blog/2012/08/31/more-additions</link>
              </item>
            
              <item>
                <title>Stumbling Upon A Good Solution</title>
                <description>&lt;p&gt;As some of you may know, I've built my own grid system with the world's most horrible name, &lt;a href=&quot;/projects/begrider/&quot; title=&quot;Begrider is a simple, twelve column 1140px fluid grid system&quot;&gt;Begrider&lt;/a&gt;. One thing that always bothered me with it was that at when you wanted to the row to end you'd had to add a class named &lt;code&gt;.last&lt;/code&gt;.  I added this because it was a simple solution to my problem. I've experimented with adding negative margins, but I never got it to function properly. Yesterday I found the perfect solution for my needs.&lt;/p&gt;

&lt;h2&gt;The solution&lt;/h2&gt;

&lt;p&gt;Begrider uses an attribute selector to target all of the column classes rather than adding all the properties and values to them by hand or having to declare all of the classes twice. So I did some experimenting and for some reason tried this simple trick:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[class^=&quot;col-&quot;]:last-child {
  margin-right: 0;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It worked! I know that I always sound suprised when something I've done works, but this really took me by suprise. Now the last &lt;code&gt;.col&lt;/code&gt; in the row gets it's gutter/margin removed without adding another class to it. I ran it through Chrome, Firefox, Opera and Internet Explorer 9 and it works in all of them. However, it should be noted that while IE9 supports it, IE8 don't (IE8 isn't too fond of the :last-child thing). I think I'm going to leave the &lt;code&gt;.last&lt;/code&gt; class in the code, just so there's an option to use it.&lt;/p&gt;

&lt;p&gt;I also re-did some parts in Begrider and split it up to two different versions: one called begrider-new and another called begrider-old. The new version uses attribute selectors to apply properties and values on all of column classes and to remove the gutter from the last column in the row. The second one groups the column classes together to add their shared properties and values while seperating them for their unique width property.&lt;/p&gt;
</description>
                <published>August 28, 2012</published>
                <link>http://ellengummesson.com/blog/2012/08/28/stumbling-upon-a-good-solution</link>
              </item>
            
              <item>
                <title>My First Plugin For Jekyll</title>
                <description>&lt;p&gt;Okay, I wouldn't really call it my first real plugin, but I took the &lt;a href=&quot;http://www.portwaypoint.co.uk/jekyll-youtube-liquid-template-tag-gist/&quot; title=&quot;Jekyll Youtube Liquid Template Tag Gist&quot;&gt;Youtube plugin&lt;/a&gt; I use and modified it so you can embed videos from Vimeo with a simple Liquid tag. That's usually the way I learn stuff anyways (even though I haven't really wrapped my head around Ruby yet) so I figured that it'd be interesting to see if I could make it work even though my modifications weren't that significant. Maybe I'll pick it up some day.&lt;/p&gt;

&lt;h2&gt;Source code&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;module Jekyll
  class Vimeo &amp;lt; Liquid::Tag
    @@width = 500
    @@height = 281

    def initialize(name, id, tokens)
      super
      @id = id
    end

    def render(context)
      %(&amp;lt;iframe width=&quot;#{@@width}&quot; height=&quot;#{@@height}&quot; src=&quot;http://player.vimeo.com/video/#{@id}&quot; frameborder=&quot;0&quot; webkitAllowFullScreen mozallowfullscreen allowFullScreen&amp;gt;&amp;lt;/iframe&amp;gt;)
    end
  end
end

Liquid::Template.register_tag('vimeo', Jekyll::Vimeo)
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Liquid tag&lt;/h3&gt;

&lt;p&gt;Remove the space before and after the percentage signs.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{ % vimeo 12345678 % }
&lt;/code&gt;&lt;/pre&gt;
</description>
                <published>August 27, 2012</published>
                <link>http://ellengummesson.com/blog/2012/08/27/my-first-plugin-for-jekyll</link>
              </item>
            
              <item>
                <title>My Jekyll Plugins</title>
                <description>&lt;p&gt;Continuing with my Jekyll series, here's a list of the plugins and other hacks I use to make everything on this site run as smooth as possible.&lt;/p&gt;

&lt;h2&gt;Pagination&lt;/h2&gt;

&lt;p&gt;For pagination, I just followed the guidelines from the &lt;a href=&quot;https://github.com/mojombo/jekyll/wiki/Pagination&quot;&gt;official wiki&lt;/a&gt; and did some minor changes in the markup. Although it's strictly not a plugin, I had to make a small configuration in Jekyll's &lt;code&gt;pagination.rb&lt;/code&gt; file since I wanted to generate my pagination pages in to a different folder than the default one. I copied the &lt;code&gt;pagination.rb&lt;/code&gt; from Jekyll's library directory and placed it in the _plugins folder and changed the following line from this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;newpage.dir = File.join(page.dir, &quot;page#{num_page}&quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;newpage.dir = File.join(page.dir, &quot;blog/page/#{num_page}&quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To my suprise, it actually worked! Like I said earlier, I guess it doesn't really count as a plugin, but I thought it would be good to mention it so that someone else can use the same approach if they want to.&lt;/p&gt;

&lt;h2&gt;Tags&lt;/h2&gt;

&lt;p&gt;To get tags to work on this site I used &lt;a href=&quot;http://charliepark.org/tags-in-jekyll/&quot; title=&quot;Tags In Jekyll&quot;&gt;an excellent guide/plugin&lt;/a&gt; from Charlie Parker. I also changed the default folder to a different one by adding and changing &lt;code&gt;tag_dir&lt;/code&gt; in my _config.yml file (ie: &lt;code&gt;tag_dir: /blog/tag/&lt;/code&gt; instead of just &lt;code&gt;tag_dir: /tag/&lt;/code&gt;).&lt;/p&gt;

&lt;h2&gt;RSS Feed&lt;/h2&gt;

&lt;p&gt;I followed and used the guidelines from Snaptortoise's &lt;a href=&quot;https://github.com/snaptortoise/jekyll-rss-feeds&quot; title=&quot;Jekyll RSS Feeds Templates&quot;&gt;RSS Feeds Templates&lt;/a&gt;. However, instead of using &lt;code&gt;layout: rss-feed&lt;/code&gt; in my feed.xml file I use &lt;code&gt;layout: nil&lt;/code&gt;. Same thing, different names.&lt;/p&gt;

&lt;h2&gt;Sitemap&lt;/h2&gt;

&lt;p&gt;I use Mike Levin's &lt;a href=&quot;https://github.com/kinnetica/jekyll-plugins&quot; title=&quot;sitemap.xml Generator&quot;&gt;sitemap.xml Generator&lt;/a&gt; to generate a simple sitemap. It's maybe not the the most required function ever, but I like to have it.&lt;/p&gt;

&lt;h2&gt;Images&lt;/h2&gt;

&lt;p&gt;For an easy image implementation I used Scott Parker's plugin &lt;a href=&quot;http://spparker.com/posts/2011-04-26-keeping-jekyll-classy#posting&quot; title=&quot;ImageBlock&quot;&gt;ImageBlock&lt;/a&gt;. It makes it easier to add images to the blog post by using a liquid tag. Simple and effective. However, it's probably not suitable if you're going to use a lot of images since it just fetches them from one folder called &lt;code&gt;images&lt;/code&gt; (or in my case, &lt;code&gt;/assets/images&lt;/code&gt;).&lt;/p&gt;

&lt;h2&gt;Youtube&lt;/h2&gt;

&lt;p&gt;I stumbled upon &lt;a href=&quot;http://www.portwaypoint.co.uk/jekyll-youtube-liquid-template-tag-gist/&quot; title=&quot;Jekyll Youtube Liquid Template Tag&quot;&gt;this gist/plugin&lt;/a&gt; by Portway Point and I decided to test it even though I probably won't use it that much. It works perfectly and like the above plugin you use it by adding a simple liquid tag.&lt;/p&gt;
</description>
                <published>August 26, 2012</published>
                <link>http://ellengummesson.com/blog/2012/08/26/my-jekyll-plugins</link>
              </item>
            
    </channel>
  </rss>